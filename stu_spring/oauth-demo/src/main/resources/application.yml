spring:
  jpa:
    database: mysql
    generate-ddl: true
    hibernate:
      ddl-auto: update
  datasource:
    username: root
    password: root
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/test
  security:
    oauth2:
      client:
        registration:
          naver:
            client-id: gpDmz2Tp25Sxh1C0S6o6             # id from naver
            client-secret: O0Zctk3phq                   # secret from naver
            redirectUri: 'http://localhost:8080/login/oauth2/code/naver'   # my call back url
            authorization-grant-type: authorization_code
            scope:                             # what you will get from oauth server
              - name
              - email
              - profile-image
            client-name: Naver
        provider:     # we need to write provider because Spring OAuth does not support naver
          naver:
            authorization_uri: 'https://nid.naver.com/oauth2.0/authorize'
            token_uri: 'https://nid.naver.com/oauth2.0/token'
            user-info-uri: 'https://openapi.naver.com/v1/nid/me'
            user_name_attribute: response   # name of json which contains user info